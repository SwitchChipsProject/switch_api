<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.switch_proj.api.api.user.mapper.UserMapper">

    <sql id="selectUser">
        SELECT u.user_id,
               u.password,
               u.nickname,
               u.image_id,
               u.email,
               u.role,
               u.created_at,
               u.certification_code,
               u.certifiaction,
               u.deleted_at,
               u.deleted_yn,
        FROM `user` u
    </sql>

    <insert id="saveUser" useGeneratedKeys="true"
            keyProperty="userId" keyColumn="user_id">
        INSERT INTO user (password,
                                 nickname,
                                 role,
                                 email,
                                 certification_code)
        VALUES (#{user.password},
                #{user.nickname},
                #{user.role},
                #{user.email},
                #{user.certificationCode})
    </insert>

    <insert id="saveUserLocation">
        INSERT INTO user_location (latitude,
                                   longitude,
                                   address,
                                   user_id)
        VALUES ( #{userLocation.latitude},
                #{userLocation.longitude},
                #{userLocation.address},
                #{userLocation.userId})
    </insert>

    <select id="findByCertificationCode" resultType="UserEntity">
        SELECT user_id
        FROM switch.user
        WHERE certification_code = #{termUuid}
    </select>

    <update id="updateEmailCertificationState">
        UPDATE user
        SET certification= true
        WHERE user_id = #{userId}
    </update>

    <select id="findByUserEmail" resultType="UserEntity">
        SELECT email
        FROM user
        WHERE email = #{userEmail}
    </select>

    <select id="findByUserName">
        SELECT user_id
        FROM user
        WHERE email = #{username}
    </select>

    <select id="findByUserId" resultType="Long">
        SELECT user_id
        FROM user
        WHERE user_id = #{userId}
    </select>
    <select id="existByUserEmail" resultType="Boolean">
        SELECT count(email)
        FROM user
        WHERE email = #{email}
    </select>


</mapper>